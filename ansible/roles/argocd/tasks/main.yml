---
- name: Create ArgoCD namespace
  shell: kubectl create namespace {{ argocd_namespace }} --dry-run=client -o yaml | kubectl apply -f -

- name: Check if ArgoCD is installed
  shell: helm list -n {{ argocd_namespace }} | grep argocd
  register: argocd_installed
  ignore_errors: yes
  changed_when: false

- name: Install ArgoCD
  shell: |
    helm upgrade --install argocd argo/argo-cd \
      --namespace {{ argocd_namespace }} \
      --set server.service.type=ClusterIP \
      --set server.extraArgs[0]=--insecure
  when: argocd_installed.rc != 0

- name: Wait for ArgoCD server to be ready
  shell: kubectl wait --for=condition=available --timeout=300s deployment/argocd-server -n {{ argocd_namespace }}

- name: Check if ArgoCD Application for Helm Charts exists
  shell: kubectl get application -n {{ argocd_namespace }} wasaa-helm-charts
  register: helm_app_exists
  ignore_errors: yes
  changed_when: false

- name: Create ArgoCD Application for Helm Charts
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: wasaa-helm-charts
      namespace: {{ argocd_namespace }}
    spec:
      project: default
      source:
        repoURL: https://github.com/web-masters-ke/wasaa-chat-helm-charts.git
        targetRevision: HEAD
        path: .
      destination:
        server: https://kubernetes.default.svc
        namespace: default
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
    EOF
  when: helm_app_exists.rc != 0

- name: Check if ArgoCD Application for Infrastructure exists
  shell: kubectl get application -n {{ argocd_namespace }} wasaa-infrastructure
  register: infra_app_exists
  ignore_errors: yes
  changed_when: false

- name: Create ArgoCD Application for Infrastructure
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: wasaa-infrastructure
      namespace: {{ argocd_namespace }}
    spec:
      project: default
      source:
        repoURL: https://github.com/Ayugi2023/wasaa-eks-infra.git
        targetRevision: HEAD
        path: kubernetes
      destination:
        server: https://kubernetes.default.svc
        namespace: default
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
    EOF
  when: infra_app_exists.rc != 0

- name: Get ArgoCD admin password
  shell: kubectl -n {{ argocd_namespace }} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  register: argocd_password
  ignore_errors: yes

- name: Check if ArgoCD ingress exists
  shell: kubectl get ingress -n {{ argocd_namespace }} argocd-ingress
  register: argocd_ingress_exists
  ignore_errors: yes
  changed_when: false

- name: Create ArgoCD ingress
  shell: |
    cat <<EOF | kubectl apply -f -
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      name: argocd-ingress
      namespace: {{ argocd_namespace }}
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    spec:
      ingressClassName: nginx
      rules:
      - host: argocd.wasaachat.com
        http:
          paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 443
    EOF
  when: argocd_ingress_exists.rc != 0

- name: Display ArgoCD access information
  debug:
    msg: |
      ArgoCD is installed!
      Access via: https://argocd.wasaachat.com
      Or port-forward: kubectl port-forward svc/argocd-server -n {{ argocd_namespace }} 8080:443
      Username: admin
      Password: {{ argocd_password.stdout | default('Check secret manually') }}